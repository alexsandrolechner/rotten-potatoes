
# Iniciando um Banco de dados MongoDB em um container Docker

version: '3'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always # iniciar com o servidor
    ports:
      - 27017:27017
    environment: 
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: mongodb
    volumes:
      - mongo_vol:/docker/mongo

    networks:
    - backend   
    
  mongo-express:
    image: mongo-express:latest
    container_name: 'MongoExpress'
    restart: always # iniciar com o servidor
    ports:
      - 8081:8081
    depends_on:
      - mongodb
    environment:    
      ME_CONFIG_MONGODB_ADMINUSERNAME: usuario
      ME_CONFIG_MONGODB_ADMINPASSWORD: senha
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongodb:27017/
    networks:
      - backend
      
  app:
      # Configuration for building the docker image for the service
      build:
        context: . # Use an image built from the specified dockerfile in the current directory.
        dockerfile: Dockerfile
      restart: unless-stopped
      ports:
      - 5000:5000    
      depends_on: 
        - mongodb # This service depends on redis. Start that first.
      environment: # Pass environment variables to the service
        ##MONGODB_HOST: mongodb://root:example@mongodb:27017/
        MONGODB_DB: $MONGODB_DB
        MONGODB_HOST: $MONGODB_HOST
        MONGODB_PORT: $MONGODB_PORT
        MONGODB_USERNAME: $MONGODB_USERNAME
        MONGODB_PASSWORD: $MONGODB_PASSWORD


      networks: # Networks to join (Services on the same network can communicate with each other using their name)
        - backend
networks: 
    backend:
      driver: bridge  

volumes:
  mongo_vol: